// <auto-generated />
using System;
using HeadhuntersCandidatesDatabase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HeadhuntersCandidatesDatabase.Data.Migrations
{
    [DbContext(typeof(HeadhuntersCandidatesDatabaseDbContext))]
    partial class HeadhuntersCandidatesDatabaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CandidateCompany", b =>
                {
                    b.Property<int>("CandidatesId")
                        .HasColumnType("int");

                    b.Property<int>("CompaniesAppliedForId")
                        .HasColumnType("int");

                    b.HasKey("CandidatesId", "CompaniesAppliedForId");

                    b.HasIndex("CompaniesAppliedForId");

                    b.ToTable("CandidateCompany");
                });

            modelBuilder.Entity("CompanyPositions", b =>
                {
                    b.Property<int>("CompaniesId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyPositionsId")
                        .HasColumnType("int");

                    b.HasKey("CompaniesId", "CompanyPositionsId");

                    b.HasIndex("CompanyPositionsId");

                    b.ToTable("CompanyPositions");
                });

            modelBuilder.Entity("HeadhuntersCandidatesDatabase.Core.Models.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionsId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionsId");

                    b.ToTable("CandidatesData");
                });

            modelBuilder.Entity("HeadhuntersCandidatesDatabase.Core.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompaniesData");
                });

            modelBuilder.Entity("HeadhuntersCandidatesDatabase.Core.Models.Positions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("HeadhuntersCandidatesDatabase.Core.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("CandidateCompany", b =>
                {
                    b.HasOne("HeadhuntersCandidatesDatabase.Core.Models.Candidate", null)
                        .WithMany()
                        .HasForeignKey("CandidatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeadhuntersCandidatesDatabase.Core.Models.Company", null)
                        .WithMany()
                        .HasForeignKey("CompaniesAppliedForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyPositions", b =>
                {
                    b.HasOne("HeadhuntersCandidatesDatabase.Core.Models.Company", null)
                        .WithMany()
                        .HasForeignKey("CompaniesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeadhuntersCandidatesDatabase.Core.Models.Positions", null)
                        .WithMany()
                        .HasForeignKey("CompanyPositionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeadhuntersCandidatesDatabase.Core.Models.Candidate", b =>
                {
                    b.HasOne("HeadhuntersCandidatesDatabase.Core.Models.Positions", null)
                        .WithMany("Candidates")
                        .HasForeignKey("PositionsId");
                });

            modelBuilder.Entity("HeadhuntersCandidatesDatabase.Core.Models.Skill", b =>
                {
                    b.HasOne("HeadhuntersCandidatesDatabase.Core.Models.Candidate", null)
                        .WithMany("SkillSet")
                        .HasForeignKey("CandidateId");
                });

            modelBuilder.Entity("HeadhuntersCandidatesDatabase.Core.Models.Candidate", b =>
                {
                    b.Navigation("SkillSet");
                });

            modelBuilder.Entity("HeadhuntersCandidatesDatabase.Core.Models.Positions", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
